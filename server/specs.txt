

FRONT : 
    Utilisateur :
        -Inscription
        -Ajout d'un vin dans sa cave
        -Edition d'un vin de sa cave
        -Ajout d'un vin dans ses favories
        -Ajout d'une note a un vin

    Recherche d'un vin :
        -avec ses caractéristiques
        -avec une image (tesseract.js)


BO :
    Vin : 
        -nom
        -date
        -nombre de notes
        -douceur/10
        -acidité/10
        -fruité/10
        -corps/10
        -description
        -lieux
        -prix
        -emplacement(si dans la cave)

FUNCTION FRONT : 
    route d'appel et paramètre de post : 

    //USER
    /user/create                post(username,password)
    /user/connect/              post(username,password)
    /user/delete/               post(username,password)

    //VIN CAVE
    /vin/add                    post(name,owner,price,age,dateAchat)
    /vin/update/                post(name,owner,newName,newPrice,newAge,newDateAchat,newTags)
    /vin/delete/                post(name,owner)
    /vin/tag/add/               post(name,owner,newTags)
    /vin/tag/delete/            post(name,owner,newTags)
    /vin/view/                  post(name,owner)
    /vin/list/                  post()
    /vin/search/                post(key,owner)

    //VIN COMMUNITY
    /vinCommunity/add            post(name,owner,price,age,dateAchat)
    /vinCommunity/update/        post(name,owner,newName,newPrice,newAge,newDateAchat,newTags)
    /vinCommunity/delete/        post(name,owner)
    /vinCommunity/note/add/      post(name,owner,newTags)
    /vinCommunity/note/delete/   post(name,owner,newTags)
    /vinCommunity/view/          post(name,owner)
    /vinCommunity/list/          post()
    /vinCommunity/search/        post(key,owner)


echo "# cavaVin" >> README.md
cd cavaVin
//@see https://rogerdudler.github.io/git-guide/index.fr.html
//git init //créer un nouveau dépot
//git remote add origin https://github.com/fahust/cavaVin.git
git pull origin master //télécharge la version la plus actuelle en ligne
git checkout -b maNewBranch //créer et switch (-b créer) (ne jamais mêttre deux fois un même nom de branch)
git add . //Ajouter/valider toutes les modifs de fichiers de la branche sur laquelle je bosse
git commit -m "mon commentaire" //Ajouter un commentaire sur la branche actuelle (obligatoire)
git push -u origin maNewBranch //Envoyer les modifs sur le github
git checkout master //Revenir sur la branche principale
git pull origin master //Retélécharge la version la plus actuelle
